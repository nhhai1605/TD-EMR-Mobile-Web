import { MedRegItemBase } from '../appointments/medRegItemBase';
import { PatientAppointment } from '../appointments/patientAppointment';
import { DiagnosisTreatment } from '../consultation/diagnosisTreatment';
import { RecordStateEnum } from '../enums/recordState';
import { V_RegForPatientOfTypeEnum } from '../enums/RegForPatientOfType';
import { RegistrationPaymentStatusEnum } from '../enums/registrationPaymentStatus';
import { RegistrationStatusEnum } from '../enums/registrationStatus';
import { PatientClassification, PatientHI_SummaryInfo } from '../reference/patientClassification';
import { OutwardDrugInvoice } from '../pharmacy/outwardDrugInvoice';
import { RefDepartment } from '../reference/refDepartment';
import { PatientPCLRequest } from '../registrations/patientPCLRequest';
import { PatientPCLRequestDetail } from '../registrations/patientPCLRequestDetail';
import { PatientRegistrationDetail } from '../registrations/patientRegistrationDetail';
import { PatientTransaction } from '../registrations/patientTransaction';
import { PayableSum } from '../registrations/payableSum';
import { PromoDiscountProgram } from '../registrations/promoDiscountProgram';
import { DiseasesReference, SmallProcedure } from '../registrations/smallProcedure';
import { Staff } from '../staff';
import { TicketIssue } from '../ticketIssue';
import { HealthInsurance } from './healthInsurance';
import { PaperReferal } from './paperReferal';
import { Patient } from './patient';
import {RegistrationType} from "../enums/emrEnum";

export interface PatientRegistration {
  regCancelDate?: string;
  ptRegistrationID?: number;
  ptRegistrationCode?: string;
  regTypeID?: number;
  deptID?: number;
  patientID?: number;
  fullName?: string;
  patientCode?: string;
  emergRecID?: number;
  isForeigner?: boolean;
  emergInPtReExamination?: boolean;
  staffID?: number;
  hIApprovedStaffID?: number;
  examDate?: string;
  patientClassID?: number;
  patientClassification?: PatientClassification;
  isHICard_FiveYearsCont?: boolean;
  isHICard_FiveYearsCont_NoPaid?: boolean;
  fiveYearsAppliedDate?: Date;
  isChildUnder6YearsOld?: boolean;
  isAllowCrossRegion?: boolean;
  isCrossRegion?: boolean;
  ptInsuranceBenefit?: number;
  hisID?: number;
  healthInsurance?: HealthInsurance;
  hiCardNo?: string;
  paperReferalID?: number;
  paperReferal?: PaperReferal;
  ptHISumInfo?: PatientHI_SummaryInfo;
  patientRegistrationDetails?: PatientRegistrationDetail[];
  refDepartment?: RefDepartment;
  patientTransaction?: PatientTransaction;
  registrationStatus?: RegistrationStatusEnum;
  registrationPaymentStatus?: RegistrationPaymentStatusEnum;
  medServiceNames?: string;
  recordState?: RecordStateEnum;
  payableSum?: PayableSum;
  isOutOfDate?: boolean;
  v_RegistrationStatus?: number;
  staffName?: string;
  markedAsDeleted?: boolean;
  findPatient?: number;
  v_RegistrationType?: RegistrationType;
  v_RegForPatientOfType?: V_RegForPatientOfTypeEnum;
  progSumMinusMinHI?: number;
  deptLocationName?: string;
  hIComment?: string;
  diagDeptLocationName?: string;
  regisType?: number;
  isChecked?: boolean;
  regLockFlag?: number;
  hIReportID?: number;
  nonHIReportID?: number;
  transferForm?: number;
  transferNum?: string;
  isHIUnder15Percent?: boolean;
  bNTKSauXV?: boolean;
  diagnosisTreatment?: DiagnosisTreatment;
  isSelected?: boolean;
  reportAppliedCode?: string;
  v_ReportStatus?: number;
  confirmHIStaffID?: number;
  basicDiagTreatment?: string;
  promoDiscountProgramObj?: PromoDiscountProgram;
  discountProgramCollection?: PromoDiscountProgram[];
  totalAmount?: number;
  totalHIRebate?: number;
  totalAmountCoPay?: number;
  reportedDate?: string;
  tranFinalizationID?: number;
  allSavedInvoiceItem?: MedRegItemBase[];
  appointment?: PatientAppointment;
  admissionICD10?: DiseasesReference;
  outHosDiagStaff?: Staff;
  medServiceNameCancel?: string;
  isCancelRegistration?: boolean;
  outPtTreatmentProgramID?: number;
  isInTreatmentProgram?: boolean;
  changedLog?: string;
  refByPatient?: Patient;
  refByStaff?: Staff;
  treatmentTotalMinute?: number;
  ticketIssue?: TicketIssue;
  isDiffBetweenRegistrationAndTicket?: boolean;
  smallProcedureForAutoPerform?: SmallProcedure;
  orgPtInsuranceBenefit?: number;
  isCalcComplete?: boolean;
  isSettlementDeleted?: boolean;
  isFollowUpVisitAfterDischarge?: boolean;
  isTimeForCheckValidSettlement?: boolean;
  unfinishRegistrationStatus?: number;
  oMRResultStringFilePath?: string;
  drugInvoices?: OutwardDrugInvoice[];
  pclRequests?: PatientPCLRequest[];
  appointmentID?: number;
  appointmentDate?: string;
  lstDetail_ReUseServiceSeqNum?: PatientPCLRequestDetail[];
  reqFromDeptLocID?: number;
  regCancelStaffID?: number;
  totalAmountForSettlement?: number;
  totalHIPaymentForSettlement?: number;
  totalPatientPaymentForSettlement?: number;
  totalDiscountForSettlement?: number;
  totalPatientPaidForSettlement?: number;
  isSettlement?: boolean;
  sequenceNo?: number;
  patient?: Patient;
  confirmStaffFullName?: string;
  apptNotes?: string;
  inPatientBillingInvoices: any[]
}

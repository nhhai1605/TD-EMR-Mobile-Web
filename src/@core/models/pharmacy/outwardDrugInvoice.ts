import { MedRegItemBase } from '../appointments/medRegItemBase';
import { ChargeableItemPrice } from '../chargeableItemPrice';
import { Prescription } from '../consultation/prescription';
import { ExamRegStatusEnum } from '../enums/examRegStatus';
import { RecordStateEnum } from '../enums/recordState';
import { RegistrationTypeEnum } from '../enums/registrationType';
import { IGender } from '../patients/gender';
import { DiseasesReference } from '../registrations/smallProcedure';
import { OutwardDrug } from './outWardDrug';
import { RefStorageWarehouseLocation } from './refShelfDrugLocation';

export interface OutwardDrugInvoice extends MedRegItemBase {
  outiID?: number;
  modFromOutiID?: number;
  prescriptID?: number;
  hITTypeID?: number;
  storeID?: number;
  staffID?: number;
  typID?: number;
  outInvID?: string;
  outInvIDString?: string;
  outInvoiceNumber?: string;
  outDate?: string;
  fullName?: string;
  numberPhone?: string;
  address?: string;
  dobString?: string;
  issueID?: number;
  ptRegistrationID?: number;
  returnID?: number;
  v_OutDrugInvStatus?: number;
  alreadyReported?: boolean;
  outDrugInvStatus?: string;
  reqDrugInID?: number;
  reqNumCode?: string;
  toStaffID?: number;
  toStoreID?: number;
  hosID?: number;
  toStoreName?: string;
  toStaffName?: string;
  hosName?: string;
  colectDrugSeqNum?: number;
  colectDrugSeqNumType?: number;
  notes?: string;
  isHICount?: boolean;
  checkedPoint?: boolean;
  v_ByOutPrice?: number;
  checked?: boolean;
  outwardDrugs?: OutwardDrug[];
  selectedPrescription?: Prescription;
  selectedStorage?: RefStorageWarehouseLocation;
  selectedStaff?: number;
  canNew?: boolean;
  canReturn?: boolean;
  canReturnXNB?: boolean;
  canEnabeNoteReturn?: boolean;
  isEnableToStore?: boolean;
  canGetMoney?: boolean;
  refundMoney?: boolean;
  canDelete?: boolean;
  canSaveAndPaid?: boolean;
  canSaveAndPaidPrescript?: boolean;
  canCollection?: boolean;
  canCancel?: boolean;
  canPrint?: boolean;
  canPrint38?: boolean;
  canEditPrescription?: boolean;
  canEditPayed?: boolean;
  canUpdate?: boolean;
  recordState?: RecordStateEnum;
  returnedInvoices?: any;
  isCountHI?: boolean;
  hiApplied?: boolean;
  iD?: number;
  invoicePrice?: number;
  hIAllowedPrice?: number;
  maskedHIAllowedPrice?: number;
  priceDifference?: number;
  hIPayment?: number;
  patientCoPayment?: number;
  patientPayment?: number;
  qty?: number;
  chargeableItem?: ChargeableItemPrice;
  hIBenefit?: number;
  paidTime?: string;
  refundTime?: string;
  createdDate?: string;
  examRegStatus?: ExamRegStatusEnum;
  totalInvoicePrice?: number;
  totalPriceDifference?: number;
  totalHIPayment?: number;
  totalCoPayment?: number;
  totalPatientPayment?: number;
  hisID?: number;
  v_RegistrationType?: RegistrationTypeEnum;
  isUpdate?: boolean;
  paidStaffID?: number;
  isOutHIPt?: boolean;
  discountAmt?: number;
  isDiscounted?: boolean;
  mainICD10?: DiseasesReference;
  issuedStaffFullName?: string;
  v_TradingPlaces?: number;
  patientGender?: IGender;
  dSPTModifiedDate?: string;
  updateToSellInConfirmRecalHi?: boolean;
  patientID?: number;
  isUpdateInvoice?: boolean;
  invoiceSellStatus?: number;
  returnDate?: string;
  exportVersion?: any;
}

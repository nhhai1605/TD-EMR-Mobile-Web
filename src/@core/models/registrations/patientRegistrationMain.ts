import { Patient } from '@core/models/patients/patient';
import { TicketIssue } from '../ticketIssue';
import { PatientClassification } from '../reference/patientClassification';
import { V_RegForPatientOfTypeEnum } from '../enums/RegForPatientOfType';
import { RegistrationStatusEnum } from '../enums/registrationStatus';
import { RecordStateEnum } from '../enums/recordState';
import { HealthInsurance } from '../patients/healthInsurance';
import { PatientAppointment } from '../appointments/patientAppointment';
import { PaperReferal } from '../patients/paperReferal';

import { RegistrationType } from '../enums/emrEnum';
export interface PatientRegistration_Main {
  ptRegistrationID?: number;
  tranFinalizationID?: number;
  regLockFlag?: number;
  hIReportID?: number;
  nonHIReportID?: number;
  reportedDate?: string;
  reportAppliedCode?: string;
  v_ReportStatus?: number;
  confirmHIStaffID?: number;
  patientID?: number;
  patientClassification?: PatientClassification;
  staffID?: number;
  hIApprovedStaffID?: number;
  examDate?: string;
  patient?: Patient;
  bNTKSauXV?: boolean;
  isHIUnder15Percent?: boolean;
  appointmentID?: number;
  appointmentDate?: string;
  regCancelDate?: string;
  regCancelStaffID?: number;
  apptNotes?: string;
  ticketIssue?: TicketIssue;
  isDiffBetweenRegistrationAndTicket?: boolean;
  isChildUnder6YearsOld?: boolean;
  isAllowCrossRegion?: boolean;
  ptInsuranceBenefit?: number;
  isCrossRegion?: boolean;
  hisID?: number;
  fiveYearsAppliedDate?: string;
  isHICard_FiveYearsCont_NoPaid?: boolean;
  v_RegistrationStatus?: number;
  isHICard_FiveYearsCont?: boolean;
  paperReferalID?: number;
  isCancelRegistration?: boolean;
  ptRegistrationTransferID?: number;
  inPtRegistrationID?: number;
  isCalcComplete?: boolean;
  oMRResultStringFilePath?: string;
  unfinishRegistrationStatus?: number;
  orgPtInsuranceBenefit?: number;
  emergInPtReExamination?: boolean;
  findPatient?: number;
  v_RegistrationType?: RegistrationType;
  v_RegForPatientOfType?: V_RegForPatientOfTypeEnum;
  markedAsDeleted?: boolean;
  registrationStatus?: RegistrationStatusEnum;
  recordState?: RecordStateEnum;
  outPtTreatmentProgramID?: number;
  isInTreatmentProgram?: boolean;
  healthInsurance?: HealthInsurance;
  basicDiagTreatment?: string;
  appointment?: PatientAppointment;
  medServiceNames?: string;
  isSelected?: boolean;
  isChecked?: boolean;
  ptRegistrationCode?: string;
  regTypeID?: number;
  patientClassID?: number;
  paperReferal?: PaperReferal;
}

import { DiseasesReference, SmallProcedure } from './smallProcedure';
import { V_RegForPatientOfTypeEnum } from './../enums/RegForPatientOfType';
import { RecordStateEnum } from '../enums/recordState';
import { RegistrationStatusEnum } from '../enums/registrationStatus';
import { PatientClassification, PatientHI_SummaryInfo } from '../reference/patientClassification';
import { HealthInsurance } from '../patients/healthInsurance';
import { PaperReferal } from '../patients/paperReferal';
import { Patient } from '../patients/patient';
import { Staff } from '../staff';
import { TicketIssue } from '../ticketIssue';
import { PatientCashAdvance } from './patientCashAdvance';
import { PatientTransaction } from './patientTransaction';
import { PayableSum } from './payableSum';
import { PromoDiscountProgram } from './promoDiscountProgram';
import { RegistrationPaymentStatusEnum } from '../enums/registrationPaymentStatus';
import { DiagnosisTreatment } from '../consultation/diagnosisTreatment';
import { PatientAppointment } from '../appointments/patientAppointment';
import { RegistrationType } from './registrationsTotalSummary';
import { RegistrationTypeEnum } from '../enums/registrationType';

export interface PatientRegistration_Simple {
  ptRegistrationID?: number;
  ptRegistrationCode?: string;
  regTypeID?: number;
  deptID?: number;
  patientID?: number;
  emergRecID?: number;
  isForeigner?: boolean;
  emergInPtReExamination?: boolean;
  staffID?: number;
  hIApprovedStaffID?: number;
  examDate?: string;
  v_DocumentTypeOnHold?: number;
  patientClassID?: number;
  patientClassification?: PatientClassification;
  isHICard_FiveYearsCont?: boolean;
  isHICard_FiveYearsCont_NoPaid?: boolean;
  fiveYearsAppliedDate?: string;
  isChildUnder6YearsOld?: boolean;
  isAllowCrossRegion?: boolean;
  ptInsuranceBenefit?: number;
  isCrossRegion?: boolean;
  hisID?: number;
  hiCardNo?: string;
  paperReferalID?: number;
  paperReferal?: PaperReferal;
  ptHISumInfo?: PatientHI_SummaryInfo;
  sequenceNo?: number;
  patient?: Patient;
  registrationType?: RegistrationType;
  patientTransaction?: PatientTransaction;
  registrationStatus?: RegistrationStatusEnum;
  registrationPaymentStatus?: RegistrationPaymentStatusEnum;
  medServiceNames?: string;
  healthInsurance?: HealthInsurance;
  recordState?: RecordStateEnum;
  payableSum?: PayableSum;
  isOutOfDate?: boolean;
  v_RegistrationStatus?: number;
  staffName?: string;
  markedAsDeleted?: boolean;
  findPatient?: number;
  v_RegistrationType?: RegistrationTypeEnum;
  v_RegForPatientOfType?: V_RegForPatientOfTypeEnum;
  progSumMinusMinHI?: number;
  diagnosisTreatmentCollection?: DiagnosisTreatment[];
  isChecked?: boolean;
  regLockFlag?: number;
  hIReportID?: number;
  nonHIReportID?: number;
  transferForm?: number;
  transferNum?: string;
  isHIUnder15Percent?: boolean;
  diagnosisTreatment?: DiagnosisTreatment;
  isSelected?: boolean;
  reportAppliedCode?: string;
  v_ReportStatus?: number;
  confirmHIStaffID?: number;
  basicDiagTreatment?: string;
  promoDiscountProgramObj?: PromoDiscountProgram;
  discountProgramCollection?: PromoDiscountProgram[];
  totalAmount?: number;
  totalHIRebate?: number;
  totalAmountCoPay?: number;
  reportedDate?: string;
  tranFinalizationID?: number;
  appointment?: PatientAppointment;
  admissionICD10?: DiseasesReference;
  outHosDiagStaff?: Staff;
  outPtTreatmentProgramID?: number;
  isInTreatmentProgram?: boolean;
  changedLog?: string;
  treatmentTotalMinute?: number;
  ticketIssue?: TicketIssue;
  isDiffBetweenRegistrationAndTicket?: boolean;
  smallProcedureForAutoPerform?: SmallProcedure;
  orgPtInsuranceBenefit?: number;
  isCalcComplete?: boolean;
  isSettlementDeleted?: boolean;
  isTimeForCheckValidSettlement?: boolean;
  unfinishRegistrationStatus?: number;
  oMRResultStringFilePath?: string;
  patientCashAdvances?: PatientCashAdvance[];
  apptNotes?: string;
}
